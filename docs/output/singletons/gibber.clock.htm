<h1 id="gibber-clock">Gibber.Clock</h1>
<p>The clock controls Gibber&#39;s master tempo and meter.</p>
<p>Example:</p>
<pre><code>drums = EDrums(&#39;x*o*x*o-&#39;)

// half tempo
Clock.rate = .5

// gradually speed up to original tempo
Clock.rate = Line( .5,1,8 )

// change time signature
Clock.timeSignature = &#39;3/4&#39;</code></pre>
<h2 id="properties">Properties</h2>
<ul>
<li><em>maxMeasures</em> : Float. Default value is 44. When using any indicator of time in Gibber, a number below this value is measured in terms of measures; higher numbers are measured in samples. For example, if Gibber.Clock.maxMeasures is 20 and the attack parameter of a synth is set to 2, that synth will have a two measure attack. If it&#39;s set to 50 it will have a 50 sample attack.</li>
<li><em>rate</em> : Float. Default value 1. Controls the rate at which time advances. Doubling this value means all events occur twice as quickly. All sequencers in Gibber use this value as a base point for determining their individual rates, hence, changing this will affect all sequencers relative to their individual <code>rate</code> property values.</li>
<li><em>timeSignature</em> : String. Use this to change Gibber&#39;s time signature, which defaults to <code>4/4</code>. </li>
</ul>
<h2 id="methods">Methods</h2>
<ul>
<li><em>time</em>( Float:timeValue ): This method returns a duration measured in sampled. If the arguments is less than <code>Gibber.Clock.maxMeasures</code>, it returns the argument * the number of samples per measure. If the argument is greater, it simply returns the argument.</li>
<li><em>Time</em>( Float:timeValue ): Returns a function that returns a time value using the provided argument. This is primarily used in sequencing. </li>
<li><em>beat</em>( Float:timeValue ): Returns the argument number of beats as a duration measured in samples.</li>
<li><em>Beat</em>( Float:timeValue ): Returns a function returning the argument number of beats as a duration measured in samples.</li>
</ul>

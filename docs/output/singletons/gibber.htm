<h1 id="gibber">Gibber</h1>
<p>The main object of the library. </p>
<p>Example:</p>
<pre><code>Gibber.init({ globalize: false })

sine = Gibber.Oscillators.Sine()

// half speed
Gibber.Clock.rate = .5</code></pre>
<h2 id="properties">Properties</h2>
<ul>
<li><em>Clock</em> : Object. Controls time and meter. See Gibber.Clock for details.</li>
<li><em>Audio</em> : Object. The main synthesis library for Gibber is named <em>Gibberish</em>; this property wraps that library.</li>
<li><em>Master</em> : Object. The master output bus for Gibber. Any FX placed on this bus will affect all sound coming out of Gibber. See the Bus reference for more detail.</li>
<li><em>Scale</em> : Object. This determines the default root and mode used by Gibber&#39;s synthesis objects when sequencing. It can be overridden on individual ugen&#39;s by assigning them their own unique scale objects. See the Scale reference for details.</li>
</ul>
<h2 id="methods">Methods</h2>
<ul>
<li><em>clear</em>(): This method removes all unit generators from the audio graph. It also resets the tempo to 120 BPM and the amplitude of the Master bus to 1.</li>
<li><em>log</em>( String: msg ): Print a message to Gibber&#39;s console.</li>
<li><em>init</em>( Object: options ): Start Gibber. The most important option is <code>globalize</code>. When <code>globalize</code> is set to false (as in the example at the top of this page) the constructors for Gibber&#39;s unit generators will not be placed in the global namespace. The default value for globalize is <code>true</code>.</li>
</ul>

<h1 id="widget">Widget</h1>
<p>Most interactive elements in Gibber (but not all) have a <a href="javascript:Gibber.Environment.Docs.openFile(&quot;graphics&quot;," title="geometry">Widget</a>) as their object prototype. You never create a widget directly, but other elements that you create will use its methods and properties.</p>
<h2 id="properties">Properties</h2>
<ul>
<li><em>background</em> : CSS color. Default : &#39;#000&#39;. The background color for the widget. If a background color is not assigned to the widget, the widget will
use the background of its containing panel.</li>
<li><em>fill</em>  : CSS color. Default: &#39;#999&#39;. If a fill color is not assigned to the widget, the widget will
use the fill of its parent panel.</li>
<li><em>stroke</em>  : CSS color. Default: &#39;#ccc&#39;. If a stroke color is not assigned to the widget, the widget will
use the stroke of its containing panel.</li>
<li><em>x</em> : Float. The x-coordinate for the upper-lefthand corner of the widget, expressed as a multiple of the parent panel&#39;s width. For example, a x value of .5 will place the left edge of the widget at the horizontal center of the panel.</li>
<li><em>y</em> : Float. The y-coordinate for the upper-lefthand corner of the widget, expressed as a multiple of the parent panel&#39;s height. For example, a x value of .5 will place the top edge of the widget at the vertical center of the panel.</li>
<li><em>width</em> : Float. The width of a widget is expressed as a percentage of the parent panel&#39;s width. For example, a widget value of .5 means the widget will be half the width of the panel.</li>
<li><em>height</em> : Float. The height of a widget is expressed as a percentage of the parent panel&#39;s height. For example, a widget value of .5 means the widget will be half the height of the panel.</li>
<li><em>bounds</em> : Array. A shorthand for assigning x,y,width and height simultaneously. For example, Button({ bounds:[0,0,1,1] }) creates a button that
fills the entire panel.</li>
<li><em>min</em> : Float. Default value: 0. The minimum value the widget outputs. Note that if you use Gibber&#39;s 
automatic mapping system (such as in the example), changing this will have no effect. See the Interface Tutorial
under Browse &gt; Miscellaneous for more information.</li>
<li><em>max</em> : Float. Default value: 1. The maximum value the widget outputs.</li>
</ul>
<h2 id="methods">Methods</h2>
<ul>
<li><em>onmousedown</em> :  An event handler for handling mousedown events. This only works with trackpads and mice, see ontouchmousedown for a version that works with touch as well. An event object is passed to this function providing the x and y offset of the widget from the panel origin, in pixels.</li>
<li><em>onmousemove</em> : Occurs whenever the mouse moves over a widget if the widget already has focus. An event object is passed to this function providing the x and y offset of the widget from the panel origin, in pixels.</li>
<li><em>onmouseup</em>   : Occurs whenever a user releases the mouse after it has been used to provide a particular widget focus. An event object is passed to this function providing the x and y offset of the widget from the panel origin, in pixels.</li>
<li><em>ontouchstart</em> :  An event handler for handling mousedown events. This only works with trackpads and mice, see ontouchmousedown for a version that works with touch as well. An event object is passed to this function providing the x and y offset of the widget from the panel origin, in pixels.</li>
<li><em>ontouchmove</em> : Occurs whenever the mouse moves over a widget if the widget already has focus. An event object is passed to this function providing the x and y offset of the widget from the panel origin, in pixels.</li>
<li><em>ontouchend</em>   : Occurs whenever a user releases the mouse after it has been used to provide a particular widget focus. An event object is passed to this function providing the x and y offset of the widget from the panel origin, in pixels.</li>
<li><em>ontouchmousedown</em> : Function. An event handler that handles both mousedown and touchstart events. An event object is passed to this function providing the x and y offset of the widget from the panel origin, in pixels.</li>
<li><em>ontouchmousemove</em> :  Event handler for both ontouchmove and onmousemove events.  An event object is passed to this function providing the x and y offset of the widget from the panel origin, in pixels.</li>
<li><em>ontouchmouseup</em>   :  Event handler for both ontouchend and onmouseup events. An event object is passed to this function providing the x and y offset of the widget from the panel origin, in pixels.</li>
<li><em>_x</em> : Returns the x-position of the widget, always in pixels, as an offset from the parent panel&#39;s left edge. Note that even if relative layouts are being used, using this method will return a value in pixels. Access the property value directly to obtain the value relative to the panel&#39;s dimensions.</li>
<li><em>_y</em> : Returns the y-position of the widget, always in pixels, as an offset from the parent panel&#39;s top edge. See _x() for more information.</li>
<li><em>_width</em> : Returns the width of the widget in pixels.</li>
<li><em>_height</em> : Returns the width of the widget in pixels.</li>
<li><em>setValue</em> : Change the current value displayed by the widget.</li>
</ul>

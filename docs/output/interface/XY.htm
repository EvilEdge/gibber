<h1 id="xy">XY</h1>
<p>A multitouch XY controller with optional built-in physics. The XY widget acts as an
array of children, each one representing a X and a Y position. Thus to access the X
property of the first child (using a zero-index array), we use my_xy_widget[0].x.</p>
<p>Example:</p>
<pre><code>// map pitch and amplitude of two sine waves to XY control.

xy = XY({ numChildren:2 })
sine1 = Sine( xy[ 0 ].X, xy[ 0 ].Y )
sine2 = Sine( xy[ 1 ].X, xy[ 1 ].Y )</code></pre>
<h2 id="properties">Properties</h2>
<p>See the <a href="javascript:Gibber.Environment.Docs.openFile(&#39;interface&#39;,&#39;Widget&#39;)">Widget</a> prototype for many other relevant properties.</p>
<ul>
<li><p><em>value</em>  : Float. Default range: { 0, 1 }. Default: 0.</p>
</li>
<li><p><em>childWidth</em> : Float. The size of the children, currently in pixels. TODO: use relative values when the panel is using relative sizes and positions.</p>
</li>
<li><p><em>usePhysics</em> : Boolean. Default false. Whether or not the physics engine should be turned on.</p>
</li>
<li><p><em>friction</em> : Float. Default .9. The amount of friction in the physics system. High values mean children will decelerate quicker.</p>
</li>
<li><p><em>maxVelocity</em> Float. Default 10. The maximum velocity for each child.</p>
</li>
<li><p><em>detectCollisions</em> : Boolean. Default false. When false, children bounce off one another.</p>
</li>
</ul>
<h2 id="methods">Methods</h2>
<p>See the <a href="javascript:Gibber.Environment.Docs.openFile(&#39;interface&#39;,&#39;Widget&#39;)">Widget</a> prototype for relevant methods.</p>

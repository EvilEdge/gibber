<h1 id="snare">Snare</h1>
<p>A synthesized snare drum generator with a built-in sequencer.</p>
<p>Inherits from Ugen.</p>
<p>Example:</p>
<pre><code>// use random tunings for each snare hit  
a = Snare().play( Rndf(.5, 1.5), 1/2 )  
a.decay = 22050</code></pre>
<h2 id="properties">Properties</h2>
<ul>
<li><em>decay</em> : Int. The length of noise decay in the snare sound in samples. IMPORTANT NOTE: At some point this will change to a value between {0,1}, but for now you specify this in samples.</li>
<li><em>snappy</em> : Float. The amplitude of the noise level in the snare sound.</li>
<li><em>amp</em> : Float. default range { 0, 1 }. default value: .25.</li>
</ul>
<h2 id="methods">Methods</h2>
<ul>
<li><em>play</em>( Array:frequencies, Array:durations ) : This method accepts arrays of frequencies and durations as arguments to create and start a sequencer targeting the oscillator.</li>
<li><em>note</em>( Float:tuning, Float:amp, Float:snappy ) : Tuning changes the frequency of various bandpass filters within the synthesis values. Numbers above one will have a higher pitch than the default; lower numbers will have a lower pitch.</li>
<li><em>stop</em>() : This method stops the sequencer that is built into the oscillator if it has been started.</li>
<li><em>kill</em>() : Disconnect the oscillator from whatever bus it is connected to. Note that if the oscillator is reference by another unit generator it will continue to feed output to it.</li>
</ul>

<h1 id="synth">Synth</h1>
<p>A selectable oscillator attached to an Attack / Decay envelope. The attack decay envelope modulates the amplitude of the oscillator.
Inherits from Ugen.</p>
<p>Example:</p>
<pre><code>a = Synth({ maxVoices:<span class="number">4</span>, waveform:<span class="string">'PWM'</span>, attack:ms(<span class="number">1</span>), decay:ms(<span class="number">1000</span>) })

a.play( [<span class="number">440</span>, <span class="number">880</span>, <span class="number">1320</span>], <span class="number">1</span>/<span class="number">4</span> )</code></pre>
<h2 id="properties">Properties</h2>
<ul>
<li><em>frequency</em> : Hz. default range { 50, 3200 }. default value 440.</li>
<li><em>amp</em> : Float. default range { 0, 1 }. default value: .25.</li>
<li><em>pulsewidth</em> : Float. default range { 0, 1 }. default value: .5</li>
<li><em>attack</em> : Int. Default range { 23, 44100 }. default value: 22050. Measured in samples.</li>
<li><em>decay</em> : Int. Default range { 23, 44100 }. default value: 22050. Measured in samples.</li>
<li><em>maxVoices</em>: Int. Default value: 1. The maximum number of frequencies the synthesizer can play simultaneously. This value can <em>only be set during initialization</em>.</li>
<li><em>glide</em>: Float. Default range { 0, 1 }. Default value: .15. This property creates glissandi as the synthesizer moves from one note to the next. The closer the value is to one the longer the glissandi will be. </li>
<li><em>pan</em>: Float. Default range { -1, 1 }. Default value: 0. The position in the stereo spectrum of the Synth output.</li>
<li><em>waveform</em> : String. The name of an oscillator for the synth to use.</li>
</ul>
<h2 id="methods">Methods</h2>
<ul>
<li><em>chord</em>( Array:frequencies, Float:amp(optional) ) : Playback multiple notes at a provided amplitude. The maxVoices property have been set to a value higher than 1 during intialization for this function to work.</li>
<li><em>note</em>( Float:frequency, Float:amp(optional) ) : This method tells the synthesizer to play a single note at a particular volume.</li>
<li><em>play</em>( Array:frequencies, Array:durations ) : This method accepts arrays of frequencies and durations as arguments to create and start a sequencer targeting the oscillator.</li>
<li><em>stop</em>() : This method stops the sequencer that is built into the oscillator if it has been started.</li>
<li><em>kill</em>() : Disconnect the oscillator from whatever bus it is connected to. </li>
</ul>

<h1 id="pluck">Pluck</h1>
<p>Simple physical model of a plucked string using Karplus-Strong.</p>
<p>Inherits from Ugen.</p>
<p>Example:</p>
<pre><code>a = Pluck()

a.play( Rndi(<span class="number">220</span>, <span class="number">880</span>), <span class="number">1</span>/<span class="number">16</span> )

a.blend = Add( <span class="number">.5</span>, Sine(<span class="number">.05</span>, <span class="number">.5</span>)._ )</code></pre>
<h2 id="properties">Properties</h2>
<ul>
<li><em>amp</em> : Float. default range { 0, 1 }. default value: .25.</li>
<li><em>blend</em> : Float. Default range { 0, 1 }. Default value: 1. In the Karplus-Strong model, the blend parameter determines the likelihood that the sign of a given sample will be flipped; this introduces noise into the model. A value of 1 means the sign will always be positive; a value of 0 means the sign will be random per sample. A value of 1 yields the typical plucked string sound.</li>
<li><em>damping</em> : Default range { 0, 1 }. Simulates damping of the string, which is also affected by frequency.</li>
<li><em>maxVoices</em>: Int. Default value: 1. The maximum number of frequencies the synthesizer can play simultaneously. This value can <em>only be set during initialization</em>.</li>
<li><em>pan</em>: Float. Default range { -1, 1 }. Default value: 0. The position in the stereo spectrum of the Synth output.</li>
</ul>
<h2 id="methods">Methods</h2>
<ul>
<li><em>chord</em>( Array:frequencies, Float:amp(optional) ) : Playback multiple notes at a provided amplitude. The maxVoices property have been set to a value higher than 1 during intialization for this function to work.</li>
<li><em>note</em>( Float:frequency, Float:amp(optional) ) : This method tells the synthesizer to play a single note at a particular volume.</li>
<li><em>play</em>( Array:frequencies, Array:durations ) : This method accepts arrays of frequencies and durations as arguments to create and start a sequencer targeting the oscillator.</li>
<li><em>stop</em>() : This method stops the sequencer that is built into the oscillator if it has been started.</li>
<li><em>kill</em>() : Disconnect the oscillator from whatever bus it is connected to. </li>
</ul>

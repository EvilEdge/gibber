<h1 id="schizo">Schizo</h1>
<p>A buffer-shuffling / stuttering effect with reversing and pitch-shifting.</p>
<p>Example:</p>
<pre><code>d = XOX( &#39;x*o*x*o-&#39; )

s = Schizo({ chance:.5, rate:ms(250), length:ms(1000) })

d.fx.add( s )</code></pre>
<h2 id="properties">Properties</h2>
<ul>
<li><em>chance</em> : Default range { 0, 1 }. The likelihood that stuttering will occur at given intervals.</li>
<li><em>rate</em> : Default 11025. Measured in samples. How often Schizo randomly determines whether or not it should begin stuttering.</li>
<li><em>length</em> : Default 22050. Measured in samples. The length of time that stuttered audio plays when stuttering is triggered.</li>
<li><em>reverseChance</em> : Float { 0 , 1 }, default .5. The chance that a particular stutter will play in reverse.</li>
<li><em>pitchChance</em> : Float { 0,1 }, default.5. The chance that a particular stutter will be repitched.</li>
<li><em>pitchMin</em> : Float, default: .25. The lowest playback rate for repitched stuttering.</li>
<li><em>pitchMax</em> : Float, default: 2. The highest playback rate for repitched stuttering.</li>
<li><em>wet</em> : Float { 0,1 }, default 1. When shuffling, the amplitude of the stuttered audio.</li>
<li><em>dry</em> : Float { 0,1 }, default 0. When shuffling, the amplitude of the un-stuttered audio.</li>
</ul>
<h2 id="methods">Methods</h2>
<p>None worth mentioning.</p>

<h1 id="sampler">Sampler</h1>
<p>Record and playback audiofiles at variable speeds. Recordings made using the sampler can be rendered to .wav files by the browser using the <em>download</em>() method.</p>
<p>Inherits from Ugen.</p>
<p>Example:</p>
<pre><code>a = XOX(&#39;x*o*x*o-&#39;)
b = Sampler.record( a, 2 ) // record for two measures

b.note( -2 ) // play in reverse at twice the recorded speed / pitch</code></pre>
<h2 id="properties">Properties</h2>
<ul>
<li><em>pitch</em> : Float. Default range: { 1, 4 }. Default value: 1. This property determines the speed of sample playback. Negative values play the sample in reverse. This value can also be set using the note() method.</li>
<li><em>amp</em> : Float. Default range: { 0, 1 }. Default value: 1.</li>
<li><em>loops</em> : Boolean. Default value: false. If true, sample playback loops back to the beginning after reach the end of a buffer, or vice-versa if the sample is playing in reverse.</li>
<li><em>start</em> : Float. Default range { 0, 1 }. Default value: 0. Determines the starting position for sample playback as a normalized value where 0 equals the first sample and 1 represents the final sample in the buffer.</li>
<li><em>end</em> : Float. Default range { 0, 1 }. Default value: 1. Determines the end position for sample playback as a normalized value where 0 equals the first sample and 1 represents the final sample in the buffer. </li>
<li><em>pan</em> : Float. Default range { -1, 1 }. Default value: 0. The position in the stereo spectrum for output.</li>
</ul>
<h2 id="methods">Methods</h2>
<ul>
<li><em>note</em>( Float:pitch, Float:amp ): Begin playback at the position determined by the start property at a rate determine by the pitch argument and at a provided amplitude.</li>
<li><em>record</em>( Ugen:input, Float:time ): Record the output of a given unit generator for a provided amount of time.</li>
<li><em>download</em>(): Download the buffer used by the Sampler as a .wav file</li>
<li><em>play</em>( Array:frequencies, Array:durations ) : This method accepts arrays of frequencies and durations as arguments to create and start a sequencer targeting the oscillator.</li>
<li><em>stop</em>() : This method stops the sequencer that is built into the oscillator if it has been started.</li>
<li><em>kill</em>() : Disconnect the oscillator from whatever bus it is connected to. </li>
</ul>

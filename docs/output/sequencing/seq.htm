<h1 id="seq">Seq</h1>
<p>The Seq object is a standalone sequencer that can schedule calls to methods and properties on a target object. Alternatively, it can be used to quickly sequence repeated calls to an anonymous function. Scheduling occurs at audio-rate and may be modulated by audio sources.</p>
<p>Sequencers can work in one of two ways. In the first, anonymous functions can easily be scheduled to execute repeatedly. To create a <code>Seq</code> that accomplishes this, simply pass the constructor two values: the function to be executing and an array of time values to use for scheduling. In the second mode, a JS object is passed with keys for (at minimum) <code>durations</code> and <code>target</code>. The <code>durations</code> value is an array of times that determine when the sequencer fires. The <code>target</code> value is an object that the sequencer can alter properties of and call methods on. Any additional key passed to the JS object becomes a property or method that is sequenced on the target object.</p>
<p>In the below example, the <code>b</code> <code>Seq</code> object uses the second mode, sequencing calls to the <code>note</code> method on the <code>a</code> ugen. The <code>c</code> <code>Seq</code> uses the first constructor type, passing an anonymous function to be executed and a timing to be used for scheduling. </p>
<pre><code>a = Synth( &#39;bleep&#39; )

b = Seq({
  note: [0,1,2,3],
  durations: 1/4,
  target: a,
})

c = Seq( function() {
  b.rate[ 1 ] *= 2
}, 2 )</code></pre>
<h2 id="properties">Properties</h2>
<ul>
<li><em>rate</em> : A Gibber <a href="javascript:Gibber.Environment.Docs.openFile(&#39;math&#39;,&#39;mul&#39;)">Mul</a> object. By default this ugen takes Gibber&#39;s master clock (stored in <code>seq.rate[0]</code> and multiplies it by 1 (stored in <code>seq.rate[1]</code>. To cut the time in half, run <code>seq.rate[1] *= .5</code>.</li>
<li><em>target</em> : Object. When the Seq object has a target, it can be used to change properties and call methods on that <code>target</code> object.</li>
<li><em>durations</em>: Array, Function, or Number. The scheduling used by the sequencer. This is a Gibber <a href="javascript:Gibber.Environment.Docs.openFile(&#39;seq&#39;,&#39;pattern&#39;)">Pattern</a> object.</li>
<li><em>offset</em>: Time. A delay before the sequencer begins running. You can use this to schedule events that occur on off beats; for example, to get a note on beats two and four: <code>b = Seq({ note:0, durations:1/2, offset:1/4 })</code></li>
</ul>
<h2 id="methods">Methods</h2>
<ul>
<li><em>start</em>: If the sequencer is stopped, start it.</li>
<li><em>stop</em>: If the sequencer is running, stop it.</li>
<li><em>kill</em>: Remove the sequencer from the audio graph.</li>
</ul>
